{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO - Directories cleaned up.\n",
      "Year= \n",
      "Access Key= \n",
      "Secret Access Key= \n",
      "Location= \n",
      "WARNING -  Access Key and Secret Access Key not provided !!\n",
      "Please provide Access Key and Secret Access Key!!\n",
      "DEBUG - Using access key provided by client.\n",
      "DEBUG - Using secret key provided by client.\n",
      "Connected to S3\n",
      "WARNING - Program running for 2003 by default\n",
      "INFO - Initializing download.\n",
      "WARNING - Log file log20030101.zip is empty. Downloading for next date.\n",
      "INFO - Log file log20030102.zip successfully downloaded\n",
      "WARNING - Log file log20030201.zip is empty. Downloading for next date.\n",
      "WARNING - Log file log20030202.zip is empty. Downloading for next date.\n",
      "WARNING - Log file log20030203.zip is empty. Downloading for next date.\n",
      "WARNING - Log file log20030204.zip is empty. Downloading for next date.\n",
      "WARNING - Log file log20030205.zip is empty. Downloading for next date.\n",
      "WARNING - Log file log20030206.zip is empty. Downloading for next date.\n",
      "WARNING - Log file log20030207.zip is empty. Downloading for next date.\n",
      "WARNING - Log file log20030208.zip is empty. Downloading for next date.\n",
      "WARNING - Log file log20030209.zip is empty. Downloading for next date.\n",
      "WARNING - Log file log20030210.zip is empty. Downloading for next date.\n",
      "WARNING - Log file log20030211.zip is empty. Downloading for next date.\n",
      "INFO - Log file log20030212.zip successfully downloaded\n",
      "INFO - Log file log20030301.zip successfully downloaded\n",
      "INFO - Log file log20030401.zip successfully downloaded\n",
      "INFO - Log file log20030501.zip successfully downloaded\n",
      "INFO - Log file log20030601.zip successfully downloaded\n",
      "INFO - Log file log20030701.zip successfully downloaded\n",
      "INFO - Log file log20030801.zip successfully downloaded\n",
      "INFO - Log file log20030901.zip successfully downloaded\n",
      "INFO - Log file log20031001.zip successfully downloaded\n",
      "INFO - Log file log20031101.zip successfully downloaded\n",
      "INFO - Log file log20031201.zip successfully downloaded\n",
      "INFO - All log files downloaded for 2003\n",
      "INFO - zip Files extracted to folder: downloadedUnzippedFiles.\n",
      "INFO - All the csv loaded into individual dataframes\n",
      "INFO - Null values count for downloadedUnzippedFiles\\log20030102.csv in all the variables:\n",
      " ip           0\n",
      "date         0\n",
      "time         0\n",
      "zone         0\n",
      "cik          0\n",
      "accession    0\n",
      "extention    0\n",
      "code         0\n",
      "size         0\n",
      "idx          0\n",
      "norefer      0\n",
      "noagent      0\n",
      "find         0\n",
      "crawler      0\n",
      "browser      0\n",
      "dtype: int64 \n",
      "INFO - 0 enteries in idx are neither 0 nor 1 in downloadedUnzippedFiles\\log20030102.csv file\n",
      "INFO - 0 enteries in norefer which are not 0 or 1 in  downloadedUnzippedFiles\\log20030102.csv file\n",
      "INFO - 0 enteries in noagent are not 0 or 1 in downloadedUnzippedFiles\\log20030102.csv file\n",
      "INFO - Null values count for downloadedUnzippedFiles\\log20030212.csv in all the variables:\n",
      " ip           0\n",
      "date         0\n",
      "time         0\n",
      "zone         0\n",
      "cik          0\n",
      "accession    0\n",
      "extention    0\n",
      "code         0\n",
      "size         1\n",
      "idx          0\n",
      "norefer      0\n",
      "noagent      0\n",
      "find         0\n",
      "crawler      0\n",
      "browser      0\n",
      "dtype: int64 \n",
      "INFO - 0 enteries in idx are neither 0 nor 1 in downloadedUnzippedFiles\\log20030212.csv file\n",
      "INFO - 0 enteries in norefer which are not 0 or 1 in  downloadedUnzippedFiles\\log20030212.csv file\n",
      "INFO - 0 enteries in noagent are not 0 or 1 in downloadedUnzippedFiles\\log20030212.csv file\n",
      "INFO - Null values count for downloadedUnzippedFiles\\log20030301.csv in all the variables:\n",
      " ip              0\n",
      "date            0\n",
      "time            0\n",
      "zone            0\n",
      "cik             0\n",
      "accession       0\n",
      "extention       0\n",
      "code            0\n",
      "size         5325\n",
      "idx             0\n",
      "norefer         0\n",
      "noagent         0\n",
      "find            0\n",
      "crawler         0\n",
      "browser      9250\n",
      "dtype: int64 \n",
      "INFO - 0 enteries in idx are neither 0 nor 1 in downloadedUnzippedFiles\\log20030301.csv file\n",
      "INFO - 0 enteries in norefer which are not 0 or 1 in  downloadedUnzippedFiles\\log20030301.csv file\n",
      "INFO - 0 enteries in noagent are not 0 or 1 in downloadedUnzippedFiles\\log20030301.csv file\n",
      "INFO - Null values count for downloadedUnzippedFiles\\log20030401.csv in all the variables:\n",
      " ip                0\n",
      "date              0\n",
      "time              0\n",
      "zone              0\n",
      "cik               0\n",
      "accession         0\n",
      "extention         0\n",
      "code              0\n",
      "size          32523\n",
      "idx               0\n",
      "norefer           0\n",
      "noagent           0\n",
      "find              0\n",
      "crawler           0\n",
      "browser      107218\n",
      "dtype: int64 \n",
      "INFO - 0 enteries in idx are neither 0 nor 1 in downloadedUnzippedFiles\\log20030401.csv file\n",
      "INFO - 0 enteries in norefer which are not 0 or 1 in  downloadedUnzippedFiles\\log20030401.csv file\n",
      "INFO - 0 enteries in noagent are not 0 or 1 in downloadedUnzippedFiles\\log20030401.csv file\n",
      "INFO - Null values count for downloadedUnzippedFiles\\log20030501.csv in all the variables:\n",
      " ip               0\n",
      "date             0\n",
      "time             0\n",
      "zone             0\n",
      "cik              0\n",
      "accession        0\n",
      "extention        0\n",
      "code             0\n",
      "size         37094\n",
      "idx              0\n",
      "norefer          0\n",
      "noagent          0\n",
      "find             0\n",
      "crawler          0\n",
      "browser      46587\n",
      "dtype: int64 \n",
      "INFO - 0 enteries in idx are neither 0 nor 1 in downloadedUnzippedFiles\\log20030501.csv file\n",
      "INFO - 0 enteries in norefer which are not 0 or 1 in  downloadedUnzippedFiles\\log20030501.csv file\n",
      "INFO - 0 enteries in noagent are not 0 or 1 in downloadedUnzippedFiles\\log20030501.csv file\n",
      "INFO - Null values count for downloadedUnzippedFiles\\log20030601.csv in all the variables:\n",
      " ip               0\n",
      "date             0\n",
      "time             0\n",
      "zone             0\n",
      "cik              0\n",
      "accession        0\n",
      "extention        0\n",
      "code             0\n",
      "size          5961\n",
      "idx              0\n",
      "norefer          0\n",
      "noagent          0\n",
      "find             0\n",
      "crawler          0\n",
      "browser      74197\n",
      "dtype: int64 \n",
      "INFO - 0 enteries in idx are neither 0 nor 1 in downloadedUnzippedFiles\\log20030601.csv file\n",
      "INFO - 0 enteries in norefer which are not 0 or 1 in  downloadedUnzippedFiles\\log20030601.csv file\n",
      "INFO - 0 enteries in noagent are not 0 or 1 in downloadedUnzippedFiles\\log20030601.csv file\n",
      "INFO - Null values count for downloadedUnzippedFiles\\log20030701.csv in all the variables:\n",
      " ip                0\n",
      "date              0\n",
      "time              0\n",
      "zone              0\n",
      "cik               0\n",
      "accession         0\n",
      "extention         0\n",
      "code              0\n",
      "size          34266\n",
      "idx               0\n",
      "norefer           0\n",
      "noagent           0\n",
      "find              0\n",
      "crawler           0\n",
      "browser      197463\n",
      "dtype: int64 \n",
      "INFO - 0 enteries in idx are neither 0 nor 1 in downloadedUnzippedFiles\\log20030701.csv file\n",
      "INFO - 0 enteries in norefer which are not 0 or 1 in  downloadedUnzippedFiles\\log20030701.csv file\n",
      "INFO - 0 enteries in noagent are not 0 or 1 in downloadedUnzippedFiles\\log20030701.csv file\n",
      "INFO - Null values count for downloadedUnzippedFiles\\log20030801.csv in all the variables:\n",
      " ip               0\n",
      "date             0\n",
      "time             0\n",
      "zone             0\n",
      "cik              0\n",
      "accession        0\n",
      "extention        0\n",
      "code             0\n",
      "size         23770\n",
      "idx              0\n",
      "norefer          0\n",
      "noagent          0\n",
      "find             0\n",
      "crawler          0\n",
      "browser      49654\n",
      "dtype: int64 \n",
      "INFO - 0 enteries in idx are neither 0 nor 1 in downloadedUnzippedFiles\\log20030801.csv file\n",
      "INFO - 0 enteries in norefer which are not 0 or 1 in  downloadedUnzippedFiles\\log20030801.csv file\n",
      "INFO - 0 enteries in noagent are not 0 or 1 in downloadedUnzippedFiles\\log20030801.csv file\n",
      "INFO - Null values count for downloadedUnzippedFiles\\log20030901.csv in all the variables:\n",
      " ip               0\n",
      "date             0\n",
      "time             0\n",
      "zone             0\n",
      "cik              0\n",
      "accession        0\n",
      "extention        0\n",
      "code             0\n",
      "size         10311\n",
      "idx              0\n",
      "norefer          0\n",
      "noagent          0\n",
      "find             0\n",
      "crawler          0\n",
      "browser      14457\n",
      "dtype: int64 \n",
      "INFO - 0 enteries in idx are neither 0 nor 1 in downloadedUnzippedFiles\\log20030901.csv file\n",
      "INFO - 0 enteries in norefer which are not 0 or 1 in  downloadedUnzippedFiles\\log20030901.csv file\n",
      "INFO - 0 enteries in noagent are not 0 or 1 in downloadedUnzippedFiles\\log20030901.csv file\n",
      "INFO - Null values count for downloadedUnzippedFiles\\log20031001.csv in all the variables:\n",
      " ip               0\n",
      "date             0\n",
      "time             0\n",
      "zone             0\n",
      "cik              0\n",
      "accession        0\n",
      "extention        0\n",
      "code             0\n",
      "size         17350\n",
      "idx              0\n",
      "norefer          0\n",
      "noagent          0\n",
      "find             0\n",
      "crawler          0\n",
      "browser      23896\n",
      "dtype: int64 \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO - 0 enteries in idx are neither 0 nor 1 in downloadedUnzippedFiles\\log20031001.csv file\n",
      "INFO - 0 enteries in norefer which are not 0 or 1 in  downloadedUnzippedFiles\\log20031001.csv file\n",
      "INFO - 0 enteries in noagent are not 0 or 1 in downloadedUnzippedFiles\\log20031001.csv file\n",
      "INFO - Null values count for downloadedUnzippedFiles\\log20031101.csv in all the variables:\n",
      " ip              0\n",
      "date            0\n",
      "time            0\n",
      "zone            0\n",
      "cik             0\n",
      "accession       0\n",
      "extention       0\n",
      "code            0\n",
      "size         1105\n",
      "idx             0\n",
      "norefer         0\n",
      "noagent         0\n",
      "find            0\n",
      "crawler         0\n",
      "browser      3122\n",
      "dtype: int64 \n",
      "INFO - 0 enteries in idx are neither 0 nor 1 in downloadedUnzippedFiles\\log20031101.csv file\n",
      "INFO - 0 enteries in norefer which are not 0 or 1 in  downloadedUnzippedFiles\\log20031101.csv file\n",
      "INFO - 0 enteries in noagent are not 0 or 1 in downloadedUnzippedFiles\\log20031101.csv file\n",
      "INFO - Null values count for downloadedUnzippedFiles\\log20031201.csv in all the variables:\n",
      " ip               0\n",
      "date             0\n",
      "time             0\n",
      "zone             0\n",
      "cik              0\n",
      "accession        0\n",
      "extention        0\n",
      "code             0\n",
      "size         26533\n",
      "idx              0\n",
      "norefer          0\n",
      "noagent          0\n",
      "find             0\n",
      "crawler          0\n",
      "browser      38446\n",
      "dtype: int64 \n",
      "INFO - 0 enteries in idx are neither 0 nor 1 in downloadedUnzippedFiles\\log20031201.csv file\n",
      "INFO - 0 enteries in norefer which are not 0 or 1 in  downloadedUnzippedFiles\\log20031201.csv file\n",
      "INFO - 0 enteries in noagent are not 0 or 1 in downloadedUnzippedFiles\\log20031201.csv file\n",
      "INFO - Rows removed where ip, date, time, cik or accession were null.\n",
      "INFO - NaN values in browser replaced with maximum count browser.\n",
      "INFO - NaN values in idx replaced with maximum count idx.\n",
      "INFO - NaN values in code replaced with maximum count code.\n",
      "INFO - NaN values in norefer replaced with maximum count norefer.\n",
      "INFO - NaN values in noagent replaced with maximum count noagent.\n",
      "INFO - NaN values in find replaced with maximum count find.\n",
      "INFO - NaN values in crawler replaced with maximum count crawler.\n",
      "INFO - NaN values in extension replaced with maximum count extension.\n",
      "INFO - NaN values in zone replaced with maximum count zone.\n",
      "INFO - NaN values in size replaced with mean value of size.\n",
      "INFO - New column sizeMean added to dataframe.\n",
      "INFO - New column maxBrowser added to dataframe.\n",
      "INFO - New column ipCount added to dataframe.\n",
      "INFO - New column cikCount added to dataframe.\n",
      "INFO - All dataframes combined and exported as masterCsv.csv.\n",
      "INFO - Csv and log file zipped\n",
      "INFO - Amazon keys are invalid!!\n",
      "Amazon keys are invalid!!\n"
     ]
    }
   ],
   "source": [
    "import urllib.request\n",
    "import zipfile\n",
    "import os\n",
    "import pandas as pd\n",
    "import logging\n",
    "import shutil\n",
    "import glob\n",
    "import boto.s3\n",
    "import sys\n",
    "from boto.s3.key import Key\n",
    "import time\n",
    "import datetime\n",
    "\n",
    "rt = logging.getLogger()\n",
    "rt.setLevel(logging.DEBUG)\n",
    "\n",
    "lf = logging.FileHandler('Problem2.log')\n",
    "lf.setLevel(logging.DEBUG)\n",
    "formatter = logging.Formatter('%(asctime)s - %(levelname)s - %(message)s')\n",
    "lf.setFormatter(formatter)\n",
    "rt.addHandler(lf)\n",
    "\n",
    "ls = logging.StreamHandler(sys.stdout )\n",
    "ls.setLevel(logging.DEBUG)\n",
    "formatter = logging.Formatter('%(levelname)s - %(message)s')\n",
    "ls.setFormatter(formatter)\n",
    "rt.addHandler(ls)\n",
    "\n",
    "try:\n",
    "    if not os.path.exists('downloadedFiles'):\n",
    "        os.makedirs('downloadedFiles', mode=0o777)\n",
    "    else:\n",
    "        shutil.rmtree(os.path.join(os.path.dirname(__file__),'downloadedFiles'), ignore_errors=False)\n",
    "        os.makedirs('downloadedFiles', mode=0o777)\n",
    "    \n",
    "    if not os.path.exists('downloadedUnzippedFiles'):\n",
    "        os.makedirs('downloadedUnzippedFiles', mode=0o777)\n",
    "    else:\n",
    "        shutil.rmtree(os.path.join(os.path.dirname(__file__), 'downloadedUnzippedFiles'), ignore_errors=False)\n",
    "        os.makedirs('downloadedUnzippedFiles', mode=0o777)\n",
    "    logging.info('Directories cleaned up.')\n",
    "except Exception as e:\n",
    "    logging.error(str(e))\n",
    "    exit()\n",
    "    \n",
    "    \n",
    "argLength=len(sys.argv)\n",
    "year=''\n",
    "accessKey=''\n",
    "secretAccessKey=''\n",
    "inputLocation='USWest2'\n",
    "\n",
    "for i in range(1,argLength):\n",
    "    val=sys.argv[i]\n",
    "    if val.startswith('year='):\n",
    "        pos=val.index(\"=\")\n",
    "        year=val[pos+1:len(val)]\n",
    "        continue\n",
    "    elif val.startswith('accessKey='):\n",
    "        pos=val.index(\"=\")\n",
    "        accessKey=val[pos+1:len(val)]\n",
    "        continue\n",
    "    elif val.startswith('secretKey='):\n",
    "        pos=val.index(\"=\")\n",
    "        secretAccessKey=val[pos+1:len(val)]\n",
    "        continue\n",
    "        \n",
    "inputLocation='USWest2'\n",
    "print(\"Year=\",year)\n",
    "print(\"Access Key=\",accessKey)\n",
    "print(\"Secret Access Key=\",secretAccessKey)\n",
    "print(\"Location=\",inputLocation)\n",
    "\n",
    "if not accessKey or not secretAccessKey:\n",
    "    logging.warning(' Access Key and Secret Access Key not provided !!')\n",
    "    print('Please provide Access Key and Secret Access Key!!')\n",
    "    exit()\n",
    "\n",
    "awsAccessKeyId = accessKey\n",
    "awsSecretAccessKey = secretAccessKey\n",
    "\n",
    "try:\n",
    "    conn = boto.connect_s3(awsAccessKeyId,\n",
    "            awsSecretAccessKey)\n",
    "\n",
    "    print(\"Connected to S3\")\n",
    "\n",
    "except:\n",
    "    logging.info(\"Invalid Amazon keys!!\")\n",
    "    print(\"Invalid Amazon keys!!\")\n",
    "    exit()\n",
    "    \n",
    "\n",
    "urlPre = \"http://www.sec.gov/dera/data/Public-EDGAR-log-file-data/\"\n",
    "qtrMonths = {'Qtr1':['01','02','03'], 'Qtr2':['04','05','06'], 'Qtr3':['07','08','09'], 'Qtr4':['10','11','12']}\n",
    "validYears = range(2003,2017)\n",
    "days = range(1,32)\n",
    "\n",
    "if not year:\n",
    "    year = 2003\n",
    "    logging.warning('Program running for 2003 by default')\n",
    "    \n",
    "if int(year) not in validYears:\n",
    "    logging.error(\"Invalid year\")\n",
    "    exit()\n",
    "\n",
    "def downloadFiles(url):\n",
    "    zips = []\n",
    "    try:\n",
    "        zips.append(urllib.request.urlretrieve(url, filename= 'downloadedFiles/'+url[-15:]))\n",
    "        if os.path.getsize('downloadedFiles/'+url[-15:]) <= 4515: #catching empty file\n",
    "            os.remove('downloadedFiles/'+url[-15:])\n",
    "            logging.warning('Log file %s is empty. Downloading for next date.', url[-15:])\n",
    "            return False\n",
    "        else:\n",
    "            logging.info('Log file %s successfully downloaded', url[-15:])\n",
    "            return True\n",
    "    except Exception as e: #Catching file not found\n",
    "        logging.warning('Log file %s not found!!!', url[-15:])\n",
    "        return True\n",
    "\n",
    "logging.info('Initializing download.')\n",
    "\n",
    "urlFinal = []\n",
    "for key, val in qtrMonths.items():\n",
    "    for v in val:\n",
    "        for d in days:\n",
    "            url = urlPre +str(year) +'/' +str(key) +'/' +'log' +str(year) +str(v) + str(format(d,'02d')) +'.zip'\n",
    "            if downloadFiles(url):\n",
    "                break\n",
    "            else:\n",
    "                continue\n",
    "logging.info('All log files downloaded for %s', year)\n",
    "\n",
    "\n",
    "try:\n",
    "    zipFiles = os.listdir('downloadedFiles')\n",
    "    for f in zipFiles:\n",
    "        z = zipfile.ZipFile(os.path.join('downloadedFiles', f), 'r')\n",
    "        for file in z.namelist():\n",
    "            if file.endswith('.csv'):\n",
    "                z.extract(file, r'downloadedUnzippedFiles')\n",
    "    logging.info('zip Files extracted to folder: downloadedUnzippedFiles.')\n",
    "except Exception as e:\n",
    "        logging.error(str(e))\n",
    "        exit()\n",
    "        \n",
    "\n",
    "try:\n",
    "    fileLists = glob.glob('downloadedUnzippedFiles' + \"/*.csv\")\n",
    "    all_csv_df_dict = {period: pd.read_csv(period) for period in fileLists}\n",
    "    logging.info('All the csv loaded into individual dataframes')\n",
    "except Exception as e:\n",
    "    logging.error(str(e))\n",
    "    exit()\n",
    "    \n",
    "\n",
    "\n",
    "try:\n",
    "    for key, val in all_csv_df_dict.items():\n",
    "        df = all_csv_df_dict[key]\n",
    "        \n",
    "        nullCount = df.isnull().sum()\n",
    "        logging.info('Null values count for %s in all the variables:\\n %s ', key, nullCount) \n",
    "        \n",
    "        incorrectIdx = (~df['idx'].isin([0.0,1.0])).sum()\n",
    "        logging.info('%s enteries in idx are neither 0 nor 1 in %s file', incorrectIdx, key) \n",
    "        \n",
    "        incorrectNorefer = (~df['norefer'].isin([0.0,1.0])).sum()\n",
    "        logging.info('%s enteries in norefer which are not 0 or 1 in  %s file', incorrectNorefer, key) \n",
    "        \n",
    "        incorrectNoagent = (~df['noagent'].isin([0.0,1.0])).sum()\n",
    "        logging.info('%s enteries in noagent are not 0 or 1 in %s file', incorrectNoagent, key) \n",
    "        \n",
    "        df.dropna(subset=['cik'])\n",
    "        df.dropna(subset=['accession'])\n",
    "        df.dropna(subset=['ip'])\n",
    "        df.dropna(subset=['date'])\n",
    "        df.dropna(subset=['time'])\n",
    "        \n",
    "        maxBrowser = pd.DataFrame(df.groupby('browser').size()).idxmax()[0]\n",
    "        df['browser'] = df['browser'].fillna(maxBrowser)\n",
    "        \n",
    "        maxIdx = pd.DataFrame(df.groupby('idx').size()).idxmax()[0]\n",
    "        df['idx'] = df['idx'].fillna(maxIdx)\n",
    "        \n",
    "        maxCode = pd.DataFrame(df.groupby('code').size()).idxmax()[0]\n",
    "        df['code'] = df['code'].fillna(maxCode)\n",
    "        \n",
    "        maxNorefer = pd.DataFrame(df.groupby('norefer').size()).idxmax()[0]\n",
    "        df['norefer'] = df['norefer'].fillna(maxNorefer)\n",
    "        \n",
    "        maxNoagent = pd.DataFrame(df.groupby('noagent').size()).idxmax()[0]\n",
    "        df['noagent'] = df['noagent'].fillna(maxNoagent)\n",
    "        \n",
    "        maxFind = pd.DataFrame(df.groupby('find').size()).idxmax()[0]\n",
    "        df['find'] = df['find'].fillna(maxFind)\n",
    "        \n",
    "        maxCrawler = pd.DataFrame(df.groupby('crawler').size()).idxmax()[0]\n",
    "        df['crawler'] = df['crawler'].fillna(maxCrawler)\n",
    "        \n",
    "        maxExtention = pd.DataFrame(df.groupby('extention').size()).idxmax()[0]\n",
    "        df['extention'] = df['extention'].fillna(maxExtention)\n",
    "        \n",
    "        maxZone = pd.DataFrame(df.groupby('zone').size()).idxmax()[0]\n",
    "        df['zone'] = df['zone'].fillna(maxZone)\n",
    "        \n",
    "        df['size'] = df['size'].fillna(df['size'].mean(axis=0))\n",
    "        \n",
    "        df['sizeMean'] = df['size'].mean(axis=0)\n",
    "        \n",
    "        df['maxBrowser'] = pd.DataFrame(df.groupby('browser').size().rename('cnt')).idxmax()[0]\n",
    "        \n",
    "        df['ipCount'] = df['ip'].nunique()\n",
    "        \n",
    "        df['cikCount'] = df['cik'].nunique()\n",
    "        \n",
    "    logging.info('Rows removed where ip, date, time, cik or accession were null.')\n",
    "    logging.info('NaN values in browser replaced with maximum count browser.')\n",
    "    logging.info('NaN values in idx replaced with maximum count idx.')\n",
    "    logging.info('NaN values in code replaced with maximum count code.')\n",
    "    logging.info('NaN values in norefer replaced with maximum count norefer.')\n",
    "    logging.info('NaN values in noagent replaced with maximum count noagent.')\n",
    "    logging.info('NaN values in find replaced with maximum count find.')\n",
    "    logging.info('NaN values in crawler replaced with maximum count crawler.')\n",
    "    logging.info('NaN values in extension replaced with maximum count extension.')\n",
    "    logging.info('NaN values in zone replaced with maximum count zone.')\n",
    "    logging.info('NaN values in size replaced with mean value of size.')\n",
    "    logging.info('New column sizeMean added to dataframe.')\n",
    "    logging.info('New column maxBrowser added to dataframe.')\n",
    "    logging.info('New column ipCount added to dataframe.')\n",
    "    logging.info('New column cikCount added to dataframe.')\n",
    "except Exception as e:\n",
    "    logging.error(str(e))\n",
    "    exit()\n",
    "    \n",
    "\n",
    "try:\n",
    "    masterDf = pd.concat(all_csv_df_dict)\n",
    "    masterDf.to_csv('masterCsv.csv')\n",
    "    logging.info('All dataframes combined and exported as masterCsv.csv.')\n",
    "except Exception as e:\n",
    "    logging.error(str(e))\n",
    "    exit()\n",
    "    \n",
    "\n",
    "def zipDir(path, zipH):\n",
    "    zipH.write(os.path.join('masterCsv.csv'))\n",
    "    zipH.write(os.path.join('problem2.log'))   \n",
    "\n",
    "zipF = zipfile.ZipFile('Problem2.zip', 'w', zipfile.ZIP_DEFLATED)\n",
    "zipDir('/', zipF)\n",
    "zipF.close()\n",
    "logging.info('Csv and log file zipped')\n",
    "\n",
    "\n",
    "loc=''\n",
    "if inputLocation == 'APNortheast':\n",
    "    loc=boto.s3.connection.Location.APNortheast\n",
    "elif inputLocation == 'APSoutheast':\n",
    "    loc=boto.s3.connection.Location.APSoutheast\n",
    "elif inputLocation == 'APSoutheast2':\n",
    "    loc=boto.s3.connection.Location.APSoutheast2\n",
    "elif inputLocation == 'CNNorth1':\n",
    "    loc=boto.s3.connection.Location.CNNorth1\n",
    "elif inputLocation == 'EUCentral1':\n",
    "    loc=boto.s3.connection.Location.EUCentral1\n",
    "elif inputLocation == 'EU':\n",
    "    loc=boto.s3.connection.Location.EU\n",
    "elif inputLocation == 'SAEast':\n",
    "    loc=boto.s3.connection.Location.SAEast\n",
    "elif inputLocation == 'USWest':\n",
    "    loc=boto.s3.connection.Location.USWest\n",
    "elif inputLocation == 'USWest2':\n",
    "    loc=boto.s3.connection.Location.USWest2\n",
    "try:   \n",
    "    ts = time.time()\n",
    "    st = datetime.datetime.fromtimestamp(ts)    \n",
    "    bucket_name = AwsAccessKeyId.lower()+str(st).replace(\" \", \"\").replace(\"-\", \"\").replace(\":\",\"\").replace(\".\",\"\")\n",
    "    bucket = conn.create_bucket(bucket_name, location=loc)\n",
    "    print(\"bucket created\")\n",
    "    zipfile = 'Problem2.zip'\n",
    "    print (\"Uploading %s to Amazon S3 bucket %s\", zipfile, bucket_name)\n",
    "    \n",
    "    def percent_cb(complete, total):\n",
    "        sys.stdout.write('.')\n",
    "        sys.stdout.flush()\n",
    "    \n",
    "    k = Key(bucket)\n",
    "    k.key = 'Problem2'\n",
    "    k.set_contents_from_filename(zipfile,\n",
    "        cb=percent_cb, num_cb=10)\n",
    "    print(\"Zip File successfully uploaded to S3\")\n",
    "except:\n",
    "    logging.info(\"Amazon keys are invalid!!\")\n",
    "    print(\"Amazon keys are invalid!!\")\n",
    "    exit()   "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
